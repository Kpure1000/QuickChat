package view;

import network.ClientNetwork;
import view.listInfoView.ChatInfoNode;
import view.listInfoView.ChatInfoNodeRender;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

/**
 * 聊天主页
 */
public class ChatView {
    private JPanel panel1;
    private JEditorPane editorPane1;
    private JButton BT_Info;
    private JButton BT_QuitGroup;
    private JButton BT_DeleteFriend;
    private JButton BT_History;
    private JTextArea textArea1;
    private JPanel topSettingPanel;
    private JButton BT_AddFriend;
    private JButton BT_AddGroup;
    private JButton BT_Setting;
    private JButton BT_MemberList;
    private JScrollPane JSP_FriendList;
    /**
     * 一定要注意，这个必须要检查字符串长度，否则会导致问题
     */
    private JLabel LB_ChatObjTitle;
    private JButton BT_Quit;
    private JPanel emptyPanel;
    private JPanel quitPanel;
    private JPanel settingPanel;
    private JPanel topPanel;
    private JTree tree1;

    private ChatInfoNode root;
    private Point pressedPoint;

    public ChatView() {
        JFrame asd = new JFrame();
        String lookAndFeel = UIManager.getSystemLookAndFeelClassName();
//        try {
//            UIManager.setLookAndFeel(lookAndFeel);
//        } catch (ClassNotFoundException |
//                InstantiationException |
//                IllegalAccessException |
//                UnsupportedLookAndFeelException e) {
//            e.printStackTrace();
//        }
        $$$setupUI$$$();
        asd.setUndecorated(true);
        asd.setVisible(true);
        asd.setSize(800, 600);
        asd.setLocationRelativeTo(null);
        asd.setResizable(false);
        asd.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        asd.getContentPane().setBackground(new Color(0x999999));
        asd.setTitle("聊天");

        asd.add($$$getRootComponent$$$());

        Color back = new Color(0x3d3f41);

        root = new ChatInfoNode(back, "我的好友", "");
        for (int i = 0; i < 15; i++) {
            ChatInfoNode sub = new ChatInfoNode(back, new ImageIcon("image/h1.jpg"),
                    "好友" + (i + 1), "你好你好你好你好", i % 2 == 0, false);


            root.add(sub);
        }

        tree1 = new JTree(root);
        tree1.setBackground(back);
        tree1.setDropMode(DropMode.ON);
        tree1.setOpaque(true);
        JSP_FriendList.setViewportView(tree1);

        //将树的前面连接去掉
        tree1.putClientProperty("JTree.lineStyle", "Horizontal");
        //设置树的字体大小，样式
        tree1.setFont(new Font("微软雅黑", Font.PLAIN, 1));
        //设置树节点的高度
        tree1.setRowHeight(70);
        //设置单元渲染描述
        tree1.setCellRenderer(new ChatInfoNodeRender());

        tree1.setRootVisible(false);

        tree1.addTreeSelectionListener(e -> {
                    ChatInfoNode curNode = ((ChatInfoNode)
                            tree1.getLastSelectedPathComponent());
                    LB_ChatObjTitle.setText("<html><font size=\"5\" style = \"color:#89FF57\">" + curNode.getHead() + "</font></html>");
                }
        );

        LB_ChatObjTitle.setText("<html><font size=\"5\" style = \"color:#89FF57\">请选择聊天对象</font></html>");

        JSP_FriendList.remove(tree1);

        BT_AddFriend.setBackground(new Color(0x89FF57));

        BT_Quit.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if(e.getClickCount()==1){
                    asd.dispose();
                }
            }
        });

        asd.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent e) { //鼠标按下事件
                pressedPoint = e.getPoint(); //记录鼠标坐标
            }
        });
        asd.addMouseMotionListener(new MouseMotionAdapter() {
            public void mouseDragged(MouseEvent e) { // 鼠标拖拽事件
                Point point = e.getPoint();// 获取当前坐标
                Point locationPoint = asd.getLocation();// 获取窗体坐标
                int x = locationPoint.x + point.x - pressedPoint.x;// 计算移动后的新坐标
                int y = locationPoint.y + point.y - pressedPoint.y;
                asd.setLocation(x, y);// 改变窗体位置
            }
        });

        asd.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                ClientNetwork.getInstance().Disconnect();
                super.windowClosed(e);
            }
        });

    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        final JSplitPane splitPane1 = new JSplitPane();
        splitPane1.setContinuousLayout(false);
        splitPane1.setDividerLocation(212);
        splitPane1.setEnabled(true);
        splitPane1.setForeground(new Color(-4473925));
        splitPane1.setOneTouchExpandable(false);
        splitPane1.setResizeWeight(0.5);
        panel1.add(splitPane1, BorderLayout.CENTER);
        JSP_FriendList = new JScrollPane();
        JSP_FriendList.setBackground(new Color(-12763327));
        JSP_FriendList.setVerticalScrollBarPolicy(22);
        splitPane1.setLeftComponent(JSP_FriendList);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new BorderLayout(0, 0));
        splitPane1.setRightComponent(panel2);
        final JSplitPane splitPane2 = new JSplitPane();
        splitPane2.setDividerLocation(208);
        splitPane2.setLastDividerLocation(227);
        splitPane2.setOrientation(0);
        splitPane2.setResizeWeight(0.5);
        panel2.add(splitPane2, BorderLayout.CENTER);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new BorderLayout(0, 0));
        splitPane2.setRightComponent(panel3);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
        panel3.add(panel4, BorderLayout.NORTH);
        BT_MemberList = new JButton();
        BT_MemberList.setText("查看成员");
        panel4.add(BT_MemberList);
        BT_History = new JButton();
        BT_History.setHorizontalAlignment(0);
        BT_History.setHorizontalTextPosition(0);
        BT_History.setText("历史记录");
        BT_History.setVerticalAlignment(0);
        panel4.add(BT_History);
        final JScrollPane scrollPane1 = new JScrollPane();
        panel3.add(scrollPane1, BorderLayout.CENTER);
        textArea1 = new JTextArea();
        scrollPane1.setViewportView(textArea1);
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new BorderLayout(0, 0));
        splitPane2.setLeftComponent(panel5);
        final JScrollPane scrollPane2 = new JScrollPane();
        scrollPane2.setHorizontalScrollBarPolicy(30);
        scrollPane2.setVerticalScrollBarPolicy(20);
        panel5.add(scrollPane2, BorderLayout.CENTER);
        editorPane1 = new JEditorPane();
        editorPane1.setEditable(false);
        scrollPane2.setViewportView(editorPane1);
        final JPanel panel6 = new JPanel();
        panel6.setLayout(new FlowLayout(FlowLayout.LEFT, 5, 5));
        panel5.add(panel6, BorderLayout.NORTH);
        LB_ChatObjTitle = new JLabel();
        LB_ChatObjTitle.setEnabled(true);
        LB_ChatObjTitle.setText("聊天对象名称");
        panel6.add(LB_ChatObjTitle);
        BT_Info = new JButton();
        BT_Info.setHorizontalAlignment(0);
        BT_Info.setHorizontalTextPosition(0);
        BT_Info.setText("查看资料");
        BT_Info.setVerticalAlignment(0);
        panel6.add(BT_Info);
        BT_DeleteFriend = new JButton();
        BT_DeleteFriend.setHorizontalAlignment(0);
        BT_DeleteFriend.setHorizontalTextPosition(0);
        BT_DeleteFriend.setText("删除好友");
        BT_DeleteFriend.setVerticalAlignment(0);
        panel6.add(BT_DeleteFriend);
        BT_QuitGroup = new JButton();
        BT_QuitGroup.setHorizontalAlignment(0);
        BT_QuitGroup.setHorizontalTextPosition(0);
        BT_QuitGroup.setText("退出群聊");
        BT_QuitGroup.setVerticalAlignment(0);
        panel6.add(BT_QuitGroup);
        topSettingPanel = new JPanel();
        topSettingPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        topSettingPanel.setBackground(new Color(-12763327));
        panel1.add(topSettingPanel, BorderLayout.NORTH);
        BT_AddFriend = new JButton();
        BT_AddFriend.setHorizontalAlignment(0);
        BT_AddFriend.setText("添加好友");
        topSettingPanel.add(BT_AddFriend);
        BT_AddGroup = new JButton();
        BT_AddGroup.setHorizontalAlignment(0);
        BT_AddGroup.setText("添加群聊");
        topSettingPanel.add(BT_AddGroup);
        BT_Setting = new JButton();
        BT_Setting.setHorizontalAlignment(0);
        BT_Setting.setText("设置");
        topSettingPanel.add(BT_Setting);
    }


    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

    String chatContent = "";

}
